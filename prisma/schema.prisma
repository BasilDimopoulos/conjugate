generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["windows", "rhel-openssl-3.0.x", "rhel-openssl-1.0.x"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                      String                    @id @default(uuid())
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  clerkId                 String?                   @unique
  mapId                   String?
  email                   String                    @unique
  UserArticleRelationship UserArticleRelationship[]
}

model Article {
  id                      String                    @id @default(uuid())
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  markdownUrl             String?
  pdfUrl                  String?
  title                   String?
  mapId                   String?
  abstract                String?
  creating                Boolean?                  @default(true)
  references              Json[]
  authors                 String[]
  semanticScholarId       String?
  analysis                ArticleAnalysis?
  UserArticleRelationship UserArticleRelationship[]
}

model UserArticleRelationship {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?
  articleId String?
  user      User?    @relation(fields: [userId], references: [id])
  article   Article? @relation(fields: [articleId], references: [id])

  @@index([userId])
  @@index([articleId])
}

model ArticleAnalysis {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  articleId     String
  entry         Article  @relation(fields: [articleId], references: [id])
  author        String?
  yearPublished String?
  journal       String?
  abstract      String?

  @@unique([articleId])
}
